<?xml version="1.0"?>
<bindings xmlns="http://www.mozilla.org/xbl">
<binding id="node-selection">
<content xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
<xul:image anonid="select-node" tooltiptext="Select a node manually IN application" />
<xul:vbox flex="1">
  <xul:box class="frame-selection" />
  <xul:hbox align="center">  
    <xul:label value="Node XPath : " />
    <xul:textbox anonid="xpath" flex="1" />
  </xul:hbox>
  
  <xul:vbox align="center">
  <xul:hbox align="center">
    <xul:tooltip id="full-preview" onpopupshowing="this.lastChild.src = document.tooltipNode.src;"><xul:image /></xul:tooltip>
    <xul:image anonid="preview" tooltip="full-preview" />
  </xul:hbox>
  </xul:vbox>
</xul:vbox>
</content>
<implementation>
<constructor>
  this.xpath = document.getAnonymousElementByAttribute(this, "anonid", "xpath");
  this.frame = document.getAnonymousElementByAttribute(this, "class", "frame-selection");
  this.preview = document.getAnonymousElementByAttribute(this, "anonid", "preview");
</constructor>

<method name="updateWith">
<parameter name="win" />
<parameter name="frame" />
<parameter name="node" />
<body><![CDATA[
  this.frame.updateWindowWithInfo(win);
  this.frame.updateFrameWithInfo(frame);
  
  this.xpath.value=node.xpath;
  this.preview.setAttribute("src",node.preview.data);
  this.preview.setAttribute("width",node.preview.width);
  this.preview.setAttribute("height",node.preview.height);
  this.preview.width=node.preview.width;
  this.preview.height=node.preview.height;
]]></body>
</method>

<method name="getSessionId">
<body><![CDATA[
  // Retrieve session id from parent nodes
  var sessionId=-1;
  var n=this.parentNode;
  while(n.parentNode) {
    if (n.getAttribute("session-id"))
      sessionId=parseInt(n.getAttribute("session-id"));
    n=n.parentNode;
  }
  return sessionId;
]]></body>
</method>

<method name="restore">
<parameter name="node" />
<body><![CDATA[
  this.frame.restore(node.frame);
  this.xpath.value=node.xpath;
  this.preview.setAttribute("src",node.preview.data);
  this.preview.setAttribute("width",node.preview.width);
  this.preview.setAttribute("height",node.preview.height);
  this.preview.width=node.preview.width;
  this.preview.height=node.preview.height;
]]></body>
</method>

<method name="getActionObject">
<body><![CDATA[
  return {
    frame : this.frame.getActionObject(),
    xpath : this.xpath.value,
    preview : {
      data : this.preview.src, 
      width:this.preview.width, 
      height:this.preview.height
    }
  };
]]></body>
</method>

</implementation>

<handlers>

<handler event="change"><![CDATA[
try {
  if (event.originalTarget.getAttribute("anonid")=="input") {
    
    if (!this.xpath.value)
      return this.refresh(null,false);
    if (!this.frames.value)
      return alert("First select an element with browser in the correct frame (website, sidebar, browser,...)");
    
    this.refresh(Actions.getElementWithXPath(this.getSessionId(), this.currentInfo.framesXPath, this.xpath.value),false);
  }
} catch(e) {
  alert(e);
}
]]></handler>
  
<handler event="click"><![CDATA[
try {
  if (event.originalTarget.getAttribute("anonid")=="select-node") {
    
    var _self=this;
    window.minimize();
    Actions.selectNode(this.getSessionId(), function (win,frame,node) {
      
      /*
      var wm = Components.classes["@mozilla.org/appshell/window-mediator;1"]
                   .getService(Components.interfaces.nsIWindowMediator);
      var w = wm.getMostRecentWindow(null);
      w.focus();
      */
      window.restore();
      _self.updateWith(win,frame,node);
      
      
    });
    
  }
} catch(e) {
  alert(e);
}
]]></handler>
</handlers>

</binding>
</bindings>
